// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String             @id @default(uuid())
  email           String             @unique
  phone           String
  name            String             @unique
  username        String             @unique
  password        String
  user_rd         String
  token_rd        String
  level           Float              @default(1)
  active          Boolean            @default(true)

  SaveBudgets     SaveBudgets[]
  Favorites       BudgetsFavorites[]
  SaveBudgetsCorp SaveBudgetsCorp[]

  @@map("users")
}

model Foods {
  id    String @id @default(uuid())
  adt   Float
  adtex Float
  chd0  Float
  chd4  Float
  chd8  Float

  Tariffs Tariff[]

  @@map("foods")
}

model Categories {
  id   String @id
  name String @unique

  TariffValues TariffValues[]
  HUs          HUs[]

  @@map("categories")
}

model Pet {
  carrying    String @id
  daily_price Float

  @@map("pets")
}

model Tariff {
  name       String  @id
  product_rd String
  active     Boolean @default(true)
  order_id   Int     @default(autoincrement())
  food_id    String

  food Foods @relation(fields: [food_id], references: [id], onDelete: Cascade)

  TariffValues        TariffValues[]
  SpecificDates       SpecificDates[]
  tariffs_to_weekend  CommonDates[]         @relation("tariff_to_weekend")
  tariffs_to_midweek  CommonDates[]         @relation("tariff_to_midweek")
  TariffCheckInValues TariffCheckInValues[]

  @@map("tariffs")
}

model TariffValues {
  id          String @id @default(uuid())
  tariffs_id  String
  category_id String
  adt         Float
  adtex       Float
  chd0        Float
  chd4        Float
  chd8        Float

  tariffs    Tariff     @relation(fields: [tariffs_id], references: [name], onDelete: Cascade)
  categories Categories @relation(fields: [category_id], references: [id], onDelete: Restrict)

  @@map("tariff_values")
}

model SpecificDates {
  date       String @id
  tariffs_id String

  tariffs Tariff @relation(fields: [tariffs_id], references: [name], onDelete: Cascade)

  @@map("specific_dates")
}

model CommonDates {
  date                 String @id
  tariff_to_midweek_id String
  tariff_to_weekend_id String

  tariff_to_midweek Tariff @relation(name: "tariff_to_midweek", fields: [tariff_to_midweek_id], references: [name], onDelete: Cascade)
  tariff_to_weekend Tariff @relation(name: "tariff_to_weekend", fields: [tariff_to_weekend_id], references: [name], onDelete: Cascade)

  @@map("common_dates")
}

model Requirement {
  name      String  @id
  price     Float
  typeModal String  @default("amount")
  type      String  @default("accommodation")
  active    Boolean @default(true)

  @@map("requirements")
}

model TariffCheckInValues {
  id         String @id @default(uuid())
  tariffs_id String
  type       String
  adt        Float
  adtex      Float
  chd0       Float
  chd4       Float
  chd8       Float

  tariffs Tariff @relation(fields: [tariffs_id], references: [name], onDelete: Cascade)

  @@map("tariff_checkin_values")
}

model HUs {
  id                Int    @id
  category_id       String
  minimum_occupancy Int
  maximum_occupancy Int

  category Categories @relation(fields: [category_id], references: [id])

  @@map("housing_units")
}

model DUTariff {
  name       String  @id
  product_rd String
  active     Boolean @default(true)

  DUTariffValues DUTariffValues[]

  @@map("du_tariffs")
}

model DUTariffValues {
  id        String @id @default(uuid())
  tariff_id String
  adt       Float
  chd0      Float
  chd6      Float

  tariffs DUTariff @relation(fields: [tariff_id], references: [name])

  @@map("du_tariff_values")
}

model SaveBudgets {
  id        String   @id @default(uuid())
  user_id   String
  budgets   Json
  name      String?
  status    String   @default("em andamento")
  createdAt DateTime @default(now())

  responsible User               @relation(fields: [user_id], references: [id])
  favorites   BudgetsFavorites[]

  @@map("save_budgets")
}

model SaveBudgetsCorp {
  id        String   @id @default(uuid())
  user_id   String
  budget    Json
  name      String
  status    String   @default("em andamento")
  createdAt DateTime @default(now())

  responsible User @relation(fields: [user_id], references: [id])

  @@map("save_budgets_corp")
}

model BudgetsFavorites {
  id        String      @id @default(uuid())
  user_id   String
  budget_id String
  users     User        @relation(fields: [user_id], references: [id])
  budget    SaveBudgets @relation(fields: [budget_id], references: [id])

  @@map("budgets_favorites")
}

model Discounts {
  id              String          @id @default(uuid())
  name            String          @unique
  percent_general Float
  percent_unitary Float
  daily_courtesy  Boolean
  daily_minimum   Int
  daily_maximum   Int
  payers_minimum  Int
  applicable_in   String
  active          Boolean         @default(true)
  dates           DiscountDates[]

  @@map("discounts")
}

model DiscountDates {
  id          String    @id @default(uuid())
  date        String
  discount_id String
  discount    Discounts @relation(fields: [discount_id], references: [id], onDelete: Cascade)

  @@map("discount_dates")
}

model Routines {
  id          String  @id @default(uuid())
  routine     String  @unique
  last_action String?
  last_deal   String?
}

model Deals {
  id            String  @id
  budget_status String?
  check_in      String?
  check_out     String?
  win           String?
  amount_total  String?
}
